@using UltimateRemote.Models
@inherits BaseComponent
@if (_tracks is { Length: > 0 })
{
    <FunctionCard IconClass="@CardIconCss"
                  Title="@_cardTitle"
                  InfoText="@_infoText"
                  CustomIcon="@Item.CustomIcon"
                  CustomIconType="@Item.IconType">
        
        <div class="d-flex flex-column">
            <LabelInput LabelText="NOW PLAYING" Css="border-0 rounded-0 align-items-center justify-content-center" ContainerCss="fw-semibold" />
            <LabelInput LabelText="@NowPlaying" Css="border-0 rounded-0 align-items-center justify-content-center" ContainerCss="overflow-hidden my-1 mx-2" CssPaddingOverride="m-0" LabelCss="@NowPlayingLabelCss" />
            @if (_playing)
            {
                <div class="d-flex justify-content-betweent align-items-center mx-1">
                    <span class="form-text fw-semibold m-0">@_playedSoFar</span>
                    <div class="progress flex-fill mx-1" style="height: 0.375rem;">
                        <div class="progress-bar bg-teal" style="width: @(_playPercentage)%" aria-valuenow="@(_playPercentage)" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                    <span class="form-text fw-semibold m-0">@_remainingPlay</span>
                </div>
            }
        </div>
        <div class="d-flex justify-content-center m-1">
            <ButtonInput Css="py-0" IconCss="play ph-duotone" ClickedEvent="() => PlayNext(false)"/>
            <ButtonInput Css="py-0" IconCss="stop ph-duotone" ClickedEvent="Stop"/>
            <ButtonInput Css="py-0" IconCss="skip-back ph-duotone" ClickedEvent="PlayPrevious" />
            <ButtonInput Css="py-0" IconCss="skip-forward ph-duotone" ClickedEvent="() => PlayNext(true)" />
            <ButtonInput Css="@ShuffleButtonCss" IconCss="shuffle ph-duotone" ClickedEvent="@(() => _shuffle = !_shuffle)" />
            <ButtonInput Css="@RepeatButtonCss" IconCss="repeat ph-duotone" ClickedEvent="@(() => _repeat = !_repeat)" />
        </div>
        @if (_tracks.Length > 1)
        {
            <DropdownList T="SidFileInfo"
                          ContainerCss=""
                          ButtonCss="dropdown-toggle p-1 rounded-0 rounded-bottom border-0 border-top w-100"
                          Options="_tracks" 
                          FixedLabel="true" 
                          Scrollable="true"
                          Label="@_tracksLabel"
                          LabelFunc="sidFileInfo => sidFileInfo.FormattedFileName!"
                          IconFunc="IconCssFunc" ItemSelectedEvent="PlaySelected" />
        }
    </FunctionCard>
}